name: Release App

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust environment with nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Install cargo-binstall
        uses: taiki-e/install-action@cargo-binstall

      - name: Install cargo-leptos
        run: |
          cargo binstall cargo-leptos -y

      - name: Add the WASM target
        run: |
          rustup target add wasm32-unknown-unknown

      - name: Build app with cargo-leptos
        run: |
          cargo leptos build --release -vv

      - name: Prepare app/ directory for release
        run: |
          tar -czf app-linux.tar.gz -C app .

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app-linux.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust environment with nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: x86_64-pc-windows-msvc
          override: true

      - name: Install cargo-binstall
        uses: taiki-e/install-action@cargo-binstall

      - name: Install cargo-leptos
        run: |
          cargo binstall cargo-leptos -y

      - name: Add the WASM target
        run: |
          rustup target add wasm32-unknown-unknown

      - name: Build app with cargo-leptos
        run: |
          cargo leptos build --release -vv

      - name: Prepare app/ directory for release
        run: |
          Compress-Archive -Path app\* -DestinationPath app-windows.zip

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app-windows.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
